{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\n// import { selectCurrentToken } from \"../features/auth/authSlice\"\nimport { selectCurrentToken } from \"../features/auth/authSlice\";\nimport jwtDecode from 'jwt-decode';\nconst useAuth = () => {\n  _s();\n  const token = useSelector(selectCurrentToken);\n  let isAdmin = false;\n  let isEmployee = false;\n  let status = \"Customer\";\n  if (token) {\n    const decoded = jwtDecode(token);\n    const {\n      id,\n      firstname,\n      lastname,\n      email,\n      roles\n    } = decoded.UserInfo;\n    isEmployee = roles.includes('Employee');\n    isAdmin = roles.includes('Admin');\n    if (isEmployee) status = \"Employee\";\n    if (isAdmin) status = \"Admin\";\n    return {\n      id,\n      firstname,\n      lastname,\n      email,\n      roles,\n      status,\n      isEmployee,\n      isAdmin\n    };\n  }\n  return {\n    id: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    roles: [],\n    isEmployee,\n    isAdmin,\n    status\n  };\n};\n_s(useAuth, \"bD5+gKbiITcJRDYAIJK4ZSEgato=\", false, function () {\n  return [useSelector];\n});\nexport default useAuth;","map":{"version":3,"names":["useSelector","selectCurrentToken","jwtDecode","useAuth","_s","token","isAdmin","isEmployee","status","decoded","id","firstname","lastname","email","roles","UserInfo","includes"],"sources":["E:/Coding/WEB-DEV/Projects2/pupFind-mern/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useSelector } from 'react-redux'\n// import { selectCurrentToken } from \"../features/auth/authSlice\"\nimport { selectCurrentToken } from \"../features/auth/authSlice\"\nimport jwtDecode from 'jwt-decode'\n\nconst useAuth = () => {\n    const token = useSelector(selectCurrentToken)\n    let isAdmin = false\n    let isEmployee = false\n    let status = \"Customer\"\n\n    if (token) {\n        const decoded = jwtDecode(token)\n        const { id, firstname, lastname, email, roles } = decoded.UserInfo\n\n        isEmployee = roles.includes('Employee')\n        isAdmin = roles.includes('Admin')\n\n        if (isEmployee) status = \"Employee\"\n        if (isAdmin) status = \"Admin\"\n\n        return { id, firstname, lastname, email, roles, status, isEmployee, isAdmin }\n    }\n\n    return { id: '', firstname: '', lastname: '', email: '', roles: [], isEmployee, isAdmin, status }\n}\nexport default useAuth"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC;AACA,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,KAAK,GAAGL,WAAW,CAACC,kBAAkB,CAAC;EAC7C,IAAIK,OAAO,GAAG,KAAK;EACnB,IAAIC,UAAU,GAAG,KAAK;EACtB,IAAIC,MAAM,GAAG,UAAU;EAEvB,IAAIH,KAAK,EAAE;IACP,MAAMI,OAAO,GAAGP,SAAS,CAACG,KAAK,CAAC;IAChC,MAAM;MAAEK,EAAE;MAAEC,SAAS;MAAEC,QAAQ;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGL,OAAO,CAACM,QAAQ;IAElER,UAAU,GAAGO,KAAK,CAACE,QAAQ,CAAC,UAAU,CAAC;IACvCV,OAAO,GAAGQ,KAAK,CAACE,QAAQ,CAAC,OAAO,CAAC;IAEjC,IAAIT,UAAU,EAAEC,MAAM,GAAG,UAAU;IACnC,IAAIF,OAAO,EAAEE,MAAM,GAAG,OAAO;IAE7B,OAAO;MAAEE,EAAE;MAAEC,SAAS;MAAEC,QAAQ;MAAEC,KAAK;MAAEC,KAAK;MAAEN,MAAM;MAAED,UAAU;MAAED;IAAQ,CAAC;EACjF;EAEA,OAAO;IAAEI,EAAE,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEP,UAAU;IAAED,OAAO;IAAEE;EAAO,CAAC;AACrG,CAAC;AAAAJ,EAAA,CApBKD,OAAO;EAAA,QACKH,WAAW;AAAA;AAoB7B,eAAeG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}